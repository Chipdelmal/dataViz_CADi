install.packages("devtools")
install.packages(c("threejs"))
devtools::install_github("Displayr/flipChartBasics")
devtools::install_github("Displayr/flipAPI")
devtools::install_github("bwlewis/rthreejs")
install.packages("maptools")
install.packages("maps")
install.packages("htmlwidgets")
devtools::install_github("Displayr/flipChartBasics")
usethis::browse_github_pat()
devtools::install_github("Displayr/flipChartBasics")
usethis::edit_r_environ()
usethis::edit_r_environ()
usethis::edit_r_environ()
devtools::install_github("Displayr/flipChartBasics")
usethis::edit_r_environ()
devtools::install_github("Displayr/flipChartBasics")
#devtools::install_github("Displayr/flipChartBasics")
#devtools::install_github("Displayr/flipAPI")
#devtools::install_github("bwlewis/rthreejs")
install.packages("maptools")
install.packages("maps")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
# Loading the libraries
library(threejs)
#library(flipChartBasics)
#library(flipAPI)
library(maps)
library(maptools)
setwd("~/Documents/GitHub/dataViz_CADi/scripts/Globe")
##############################################################################
# Basic globe with rastered map
##############################################################################
earth = "http://eoimages.gsfc.nasa.gov/images/imagerecords/73000/73909/world.topo.bathy.200412.3x5400x2700.jpg"
globejs(img=earth, bg="black")
##############################################################################
# Basic globe with rastered map
##############################################################################
earth = "http://eoimages.gsfc.nasa.gov/images/imagerecords/73000/73909/world.topo.bathy.200412.3x5400x2700.jpg"
globejs(img=earth, bg="black")
##############################################################################
# Basic globe with rastered map
##############################################################################
earth = "http://eoimages.gsfc.nasa.gov/images/imagerecords/73000/73909/world.topo.bathy.200412.3x5400x2700.jpg"
globejs(img=earth, bg="black")
globejs(img=earth, bg="black")
globejs(img=earth, bg="white")
globejs(img=earth, bg="red")
globejs(img=earth, bg="black")
?globejs
#############################################################################
# Rendering a globe with 2000 most populated cities
#############################################################################
data(world.cities, package="maps")
world.cities
head(world.cities)
head(world.cities)
world.cities$capital
sizeof(world.cities)
?length
dim(world.cities)
head(world.cities)
order(world.cities$pop,decreasing=TRUE)
head(order(world.cities$pop,decreasing=TRUE))
cities = world.cities[order(world.cities$pop,decreasing=TRUE)[1:2000],]
cities
head(cities)
head(cities)
dim(cities)
value  = 100 * cities$pop / max(cities$pop)
max(cities$pop)
cities$pop
100 * cities$pop
100 * cities$pop / max(cities$pop)
globejs(bg="black", lat=cities$lat, long=cities$long, value=value, rotationlat=0.34, rotationlong=0, fov=30)
globejs(bg="black", lat=cities$lat, long=cities$long, value=value, rotationlat=0.34, rotationlong=0, fov=30)
??globejs
globejs(bg="black", lat=cities$lat, long=cities$long, value=value, rotationlat=0.34, rotationlong=0, fov=30)
globeCities=globejs(img=earth,bg="black", lat=cities$lat, long=cities$long, value=value, rotationlat=0.34, rotationlong=0, fov=30)
globeCities
globejs(bg="black", lat=cities$lat, long=cities$long, value=value, rotationlat=0.34, rotationlong=0, fov=30)
?globejs
globejs(bg="black",
lat=cities$lat,
long=cities$long,
value=value,
rotationlat=0.34,
rotationlong=0,
fov=30,
color="#E83F6F"
)
globejs(bg="black",
lat=cities$lat,
long=cities$long,
value=value,
rotationlat=0.34,
rotationlong=0,
fov=30,
color="#D8D8F6"
)
value  = 200 * cities$pop / max(cities$pop)
globejs(bg="black",
lat=cities$lat,
long=cities$long,
value=value,
rotationlat=0.34,
rotationlong=0,
fov=30,
color="#D8D8F6"
)
##############################################################################
# Meteorite impacts
##############################################################################
# Read the data and calculate age in years
x = read.csv("https://data.nasa.gov/api/views/gh4g-9sfh/rows.csv")
?read.csv
current = as.numeric(format(Sys.Date(), "%Y"))
current
Sys.Date()
Sys.time()
?substr
x$year
substr("123456789",2,4)
as.numeric(substr(x$year, 7, 10))
x$age = current - as.numeric(substr(x$year, 7, 10))
x$age
# Filter the required information
x = x[ , c("reclong", "reclat", "mass..g.", "age")]
colnames(x) = c("long","lat","value", "age")
x
x = read.csv("https://data.nasa.gov/api/views/gh4g-9sfh/rows.csv")
current = as.numeric(format(Sys.Date(), "%Y"))
x$age = current - as.numeric(substr(x$year, 7, 10))
dim(x)
head(x)
# Filter the required information
x = x[ , c("reclong", "reclat", "mass..g.", "age")]
head(x)
colnames(x)
colnames(x) = c("long","lat","value", "age")
head(x)
colors = as.numeric(cut(x$age,
breaks = quantile(x$age, probs = seq(0, 1, 0.1),
include.lowest = TRUE, na.rm = TRUE)))
palette = ChartColors(10, reverse = TRUE)
colors = palette[colors]
# Set colors on a scale of 1 to 10 by percentile
colors = as.numeric(cut(x$age))
breaks = quantile(x$age, probs = seq(0, 1, 0.1),
include.lowest = TRUE, na.rm = TRUE)))
palette = ChartColors(10, reverse = TRUE)
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val = 2 * log(x$value),
pointsize = 0.5,
atmosphere = TRUE)
globeMeteors
x$age
x$age/max(x$age)
x$age / 100
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age / 100,
pointsize = 0.5,
atmosphere = TRUE)
globeMeteors
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age / 10,
pointsize = 0.5,
atmosphere = TRUE)
globeMeteors
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age / 5,
pointsize = 0.5,
atmosphere = TRUE)
globeMeteors
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age / 5,
pointsize = 0.5,
atmosphere = TRUE,
color="#D8D8F6"
)
globeMeteors
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age / 5,
pointsize = 0.5,
atmosphere = FALSE,
color="#D8D8F6"
)
globeMeteors
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age / 5,
pointsize = 1,
atmosphere = TRUE,
color="#D8D8F6"
)
globeMeteors
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age / 5,
pointsize = 1,
atmosphere = TRUE,
color="#FFFFFF"
)
globeMeteors
setwd("~/Documents/GitHub/dataViz_CADi/scripts/Globe")
globeMeteors
htmlwidgets::saveWidget(globeMeteors, "globeMeteors.html")
##############################################################################
# Meteorite impacts
##############################################################################
# Read the data and calculate age in years
x = read.csv("http://data.nasa.gov/api/views/gh4g-9sfh/rows.csv")
current = as.numeric(format(Sys.Date(), "%Y"))
x$age = current - as.numeric(substr(x$year, 7, 10))
# Filter the required information
x = x[ , c("reclong", "reclat", "mass..g.", "age")]
colnames(x) = c("long","lat","value", "age")
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age / 5,
pointsize = 1,
atmosphere = TRUE,
color="#FFFFFF"
)
globeMeteors
htmlwidgets::saveWidget(globeMeteors, "globeMeteors.html")
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age ,
pointsize = 1,
atmosphere = TRUE,
color="#FFFFFF"
)
globeMeteors
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age * 5 ,
pointsize = 1,
atmosphere = TRUE,
color="#FFFFFF"
)
globeMeteors
# Plot the data on the globe
globeMeteors=globejs(img=earth,
lat = x$lat,
long = x$long,
val =  x$age * 5 ,
pointsize = 1,
atmosphere = TRUE,
color="#FFFFFF"
)
globeMeteors
htmlwidgets::saveWidget(globeMeteors, "globeMeteors.html")
htmlwidgets::saveWidget(globeMeteors, "globeMeteors.html")
data(flights)
head(flights)
dim(flights)
?sprintf
# Approximate locations as factors
dest = factor(sprintf("%.2f:%.2f",flights[,3], flights[,4]))
dest
head(dest)
# Approximate locations as factors
dest = factor(sprintf("%.2f:%.2f",flights[,3], flights[,4]))
head(dest)
# A table of destination frequencies
freq = sort(table(dest), decreasing=TRUE)
head(freq)
head(freq)
head(freq)
?table
# The most frequent destinations in these data, possibly hub airports?
frequent_destinations = names(freq)[1:10]
frequent_destinations
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]
frequent_flights
frequent_flights
dim(frequent_flights)
# Lat/long and counts of frequent flights
ll = unique(frequent_flights[,3:4])
?unique
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=0.3, arcsLwd=2, arcsColor="#ffff00", arcsOpacity=0.15,
atmosphere=TRUE, color="#00aaff", pointsize=0.5, bg="black")
globeFlights
globeFlights
dest = factor(sprintf("%.2f:%.2f",flights[,3], flights[,4]))
# A table of destination frequencies
freq = sort(table(dest), decreasing=TRUE)
# The most frequent destinations in these data, possibly hub airports?
frequent_destinations = names(freq)[1:3]
# Subset the flight data by destination frequency
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]
# Lat/long and counts of frequent flights
ll = unique(frequent_flights[,3:4])
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=0.3, arcsLwd=2, arcsColor="#ffff00", arcsOpacity=0.15,
atmosphere=TRUE, color="#00aaff", pointsize=0.5, bg="black")
globeFlights
head(flights)
# Approximate locations as factors
dest = factor(sprintf("%.2f:%.2f",flights[,1], flights[,2]))
# A table of destination frequencies
freq = sort(table(dest), decreasing=TRUE)
# The most frequent destinations in these data, possibly hub airports?
frequent_destinations = names(freq)[1:3]
# Subset the flight data by destination frequency
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]
# Lat/long and counts of frequent flights
ll = unique(frequent_flights[,3:4])
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=0.3, arcsLwd=2, arcsColor="#ffff00", arcsOpacity=0.15,
atmosphere=TRUE, color="#00aaff", pointsize=0.5, bg="black")
globeFlights
# Approximate locations as factors
dest = factor(sprintf("%.2f:%.2f",flights[,1], flights[,2]))
# A table of destination frequencies
freq = sort(table(dest), decreasing=TRUE)
# The most frequent destinations in these data, possibly hub airports?
frequent_destinations = names(freq)[1:3]
# Subset the flight data by destination frequency
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]
# Lat/long and counts of frequent flights
ll = unique(frequent_flights[,3:4])
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=0.3, arcsLwd=2, arcsColor="#ffff00", arcsOpacity=0.15,
atmosphere=TRUE, color="#00aaff", pointsize=0.5, bg="black")
globeFlights
dest = factor(sprintf("%.2f:%.2f",flights[,3], flights[,4]))
# A table of destination frequencies
freq = sort(table(dest), decreasing=TRUE)
# The most frequent destinations in these data, possibly hub airports?
frequent_destinations = names(freq)[1:3]
# Subset the flight data by destination frequency
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]
# Lat/long and counts of frequent flights
ll = unique(frequent_flights[,3:4])
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=0.3, arcsLwd=2, arcsColor="#ffff00", arcsOpacity=0.15,
atmosphere=TRUE, color="#00aaff", pointsize=0.5, bg="black")
globeFlights
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=0.3, arcsLwd=2, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=TRUE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
# The most frequent destinations in these data, possibly hub airports?
frequent_destinations = names(freq)[1:300]
# Subset the flight data by destination frequency
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]
# Lat/long and counts of frequent flights
ll = unique(frequent_flights[,3:4])
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=0.3, arcsLwd=2, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=TRUE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
# The most frequent destinations in these data, possibly hub airports?
frequent_destinations = names(freq)[1:100]
# Subset the flight data by destination frequency
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]
# Lat/long and counts of frequent flights
ll = unique(frequent_flights[,3:4])
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=1, arcsLwd=2, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=TRUE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.75, arcsLwd=2, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=TRUE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
?globejs
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.5, arcsLwd=2, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=FALSE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.3, arcsLwd=2, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=FALSE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.35, arcsLwd=2, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=FALSE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
# The most frequent destinations in these data, possibly hub airports?
frequent_destinations = names(freq)[1:250]
# Subset the flight data by destination frequency
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]
# Lat/long and counts of frequent flights
ll = unique(frequent_flights[,3:4])
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.35, arcsLwd=2, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=FALSE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.45, arcsLwd=1, arcsColor="#ffffff", arcsOpacity=0.2,
atmosphere=FALSE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.45, arcsLwd=.5, arcsColor="#ffffff", arcsOpacity=0.2,
atmosphere=FALSE, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.45, arcsLwd=.5, arcsColor="#ffffff", arcsOpacity=0.2,
atmosphere=FALSE, value=10, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.45, arcsLwd=.5, arcsColor="#ffffff", arcsOpacity=0.2,
atmosphere=FALSE, value=20, color="#ffffff", pointsize=0.5, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.45, arcsLwd=.5, arcsColor="#ffffff", arcsOpacity=0.2,
atmosphere=FALSE, value=20, color="#96E6B3", pointsize=0.5, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.45, arcsLwd=.5, arcsColor="#ffffff", arcsOpacity=0.2,
atmosphere=FALSE, value=20, color="#DA3E52", pointsize=1, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.45, arcsLwd=.5, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=FALSE, value=20, color="#DA3E52", pointsize=1, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globeFlights=globejs(img=earth,lat=ll[,1], long=ll[,2], arcs=frequent_flights, bodycolor="#aaaaff",
arcsHeight=.45, arcsLwd=.5, arcsColor="#ffffff", arcsOpacity=0.1,
atmosphere=FALSE, value=20, color="#D0D0D0", pointsize=1, bg="black")
globeFlights
htmlwidgets::saveWidget(globeFlights, "globeFlights.html")
