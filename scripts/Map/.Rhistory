install.packages("rjson")
install.packages("dplyr")
#install.packages("ggplot2")
install.packages("rjson")
install.packages("RCurl")
install.packages("leaflet")
library(leaflet)
library(dplyr)
library(ggplot2)
library(rjson)
library(jsonlite)
library(leaflet)
library(RCurl)
setwd("~/Documents/GitHub/dataViz_CADi/scripts/Map")
m = leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m
m = leaflet() %>% # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m
m = leaflet() %>% # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m
?addTiles
m = leaflet() %>% # Add default OpenStreetMap map tiles
addTiles() %>%
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m
##############################################################################
# Basic globe with rastered map
##############################################################################
m = leaflet() %>% # Add default OpenStreetMap map tiles
addTiles() %>%
addMarkers(lng=174.768, lat=-36.852, popup="New Zealand")
m
base_url = "https://data.colorado.gov/resource/j5pc-4t32.json?"
full_url = paste0(base_url, "station_status=Active", "&county=BOULDER")
water_data = getURL(URLencode(full_url))
##############################################################################
# Basic globe with rastered map
##############################################################################
m = leaflet() %>% # Add default OpenStreetMap map tiles
addTiles() %>%
addMarkers(lng=174.768, lat=-36.852, popup="New Zealand") %>%
addMarkers(lng=174.768, lat=-36.851, popup="New Zealand")
m
base_url = "https://data.colorado.gov/resource/j5pc-4t32.json?"
full_url = paste0(base_url, "station_status=Active", "&county=BOULDER")
water_data = getURL(URLencode(full_url))
# you can then pipe this
water_data_df = fromJSON(water_data) %>%
flatten(recursive = TRUE) # remove the nested data frame
# turn columns to numeric and remove NA values
water_data_df = water_data_df %>%
mutate_at(vars(amount, location.latitude, location.longitude), funs(as.numeric)) %>%
filter(!is.na(location.latitude))
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude,
lat = ~location.latitude)
water_locations_map
m = leaflet() %>% # Add default OpenStreetMap map tiles
addTiles() %>%
addMarkers(lng=174.768, lat=-36.852, popup="New Zealand") %>%
addMarkers(lng=174.768, lat=-36.851, popup="New Zealand")
m
##############################################################################
# Basic globe with rastered map
##############################################################################
m = leaflet() %>% # Add default OpenStreetMap map tiles
addTiles() %>%
addMarkers(lng=-99.226977, lat=19.595734, popup="New Zealand")
m
htmlwidgets::saveWidget(as_widget(m), "leafletMexico02.html")
library(plotly)
htmlwidgets::saveWidget(as_widget(m), "leafletMexico02.html")
base_url = "https://data.colorado.gov/resource/j5pc-4t32.json?"
full_url = paste0(base_url, "station_status=Active", "&county=BOULDER")
water_data = getURL(URLencode(full_url))
?getURL
# you can then pipe this
water_data_df = fromJSON(water_data) %>%
flatten(recursive = TRUE) # remove the nested data frame
?fromJSON
water_data
full_url
base_url = "http://data.colorado.gov/resource/j5pc-4t32.json?"
full_url = paste0(base_url, "station_status=Active", "&county=BOULDER")
water_data = getURL(URLencode(full_url))
paste0("TextA","TextB")
base_url = "http://data.colorado.gov/resource/j5pc-4t32.json?"
full_url = paste0(base_url, "station_status=Active", "&county=BOULDER")
water_data = getURL(URLencode(full_url))
getURL(URLencode(full_url))
fromJSON(water_data)
head(fromJSON(water_data))
class(water_data_df)
# turn columns to numeric and remove NA values
water_data_df = water_data_df %>%
mutate_at(vars(amount, location.latitude, location.longitude), funs(as.numeric)) %>%
filter(!is.na(location.latitude))
water_data_df
water_data_df
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude,
lat = ~location.latitude)
water_locations_map
?read.csv2
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude,
lat = ~location.latitude,
popup= ~location.needs_recoding
)
water_locations_map
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude,
lat = ~location.latitude,
popup= "popup"
)
water_locations_map
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude + .01,
lat = ~location.latitude,
popup= "popup"
)
water_locations_map
water_locations_map
htmlwidgets::saveWidget(as_widget(water_locations_map), "leafletColorado.html")
?addCircleMarkers
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude,
lat = ~location.latitude,
popup= "popup",
opacity = 0.25,
color = "#E83F6F",
stroke = TRUE
)
water_locations_map
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude,
lat = ~location.latitude,
popup= "popup",
opacity = 0.25,
color = "#E83F6F",
stroke = TRUE,
radius=5
)
water_locations_map
htmlwidgets::saveWidget(as_widget(water_locations_map), "leafletColorado.html")
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude,
lat = ~location.latitude,
popup= "popup",
opacity = 0.25,
color = "#E83F6F",
stroke = FALSE,
radius=5
)
water_locations_map
# create leaflet map
water_locations_map = leaflet(water_data_df) %>%
addTiles() %>%
addCircleMarkers(lng = ~location.longitude,
lat = ~location.latitude,
popup= "popup",
opacity = 0.75,
color = "#E83F6F",
stroke = FALSE,
radius=10
)
water_locations_map
?addCircleMarkers
install.packages("devtools")
install.packages(c("threejs"))
devtools::install_github("Displayr/flipChartBasics")
